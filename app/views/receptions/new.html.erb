<div class="container mt-4">
  <div class="card border-0 shadow-sm rounded-3">
    <div class="card-header text-black text-center py-3 rounded-top bg-gradient" style="background-color: #fff3cd;">
      <h2 class="fw-bold mb-0">Nueva Recepción</h2>
    </div>

  <div class="card-body p-4">
      <%= form_with(model: @reception, local: true) do |f| %>

        <% if @reception.errors.any? %>
          <div class="alert alert-danger alert-dismissible fade show d-flex align-items-center p-3" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2 fs-5"></i>
            <div>
              <h6 class="fw-bold mb-1"><%= pluralize(@reception.errors.count, "error") %> impidieron guardar esta recepción:</h6>
              <ul class="mb-0 ps-3">
                <% @reception.errors.full_messages.each do |msg| %>
                  <li><%= msg %></li>
                <% end %>
              </ul>
            </div>
            <button type="button" class="btn-close ms-auto" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        <% end %>

    <!-- DATOS GLOBALES DE LA RECEPCIÓN -->
    <div class="row">
      <div class="col-md-6">
        <div class="mb-3">
          <%= f.label :fecha, class: "form-label fw-bold text-warning" %>
          <%= f.date_field :fecha, class: "form-control", readonly: true, value: Date.today %>
        </div>
        <div class="mb-3">
          <%= f.label :hora, class: "form-label fw-bold text-warning" %>
          <%= f.time_field :hora, class: "form-control", readonly: true, value: Time.current.strftime("%H:%M") %>
        </div>
        <div class="mb-3">
              <%= f.label :supplier_id, "Proveedor", class: "form-label fw-bold text-warning" %>
              <%= f.select :supplier_id, 
                           options_from_collection_for_select(@suppliers, "id", "nombre", @reception.supplier_id), 
                           { include_blank: "Seleccione un proveedor" },
                           { id: "supplier-select", class: "form-select shadow-sm border-0" } %>
            </div>
        <div class="mb-3">
          <%= f.label :nro_guia_despacho, "Número de Guía de Despacho ", class: "form-label fw-bold text-warning" %>
          <%= f.text_field :nro_guia_despacho, class: "form-control" %>
        </div>
      </div>
      <div class="col-md-6">
        <div class="mb-3">
          <%= f.label :user_id, "Evaluador", class: "form-label fw-bold text-warning" %>
          <p><strong><%= current_user.nombre_completo %></strong></p>
          <%= f.hidden_field :user_id, value: current_user.id %>
        </div>
        <div class="mb-3">
          <%= f.label :guia_despacho, "Imagen de Guía de Despacho", class: "form-label fw-bold text-warning" %>
          <%= f.file_field :guia_despacho, class: "form-control" %>
        </div>
      </div>
    </div>

    <hr>

    <!-- SECCIÓN: Ítems DE RECEPCIÓN -->
    <h4 class="fw-bold text-warning">Ítems de Recepción</h4>
    <div id="reception-items-container">
      <!-- Cada ítem contendrá dos bloques: uno para "Agricola Teruel" y otro para "otros" -->
      <div class="reception-item border p-3 mb-3 rounded shadow-sm" style="background-color: #fff3cd;">
        <!-- Bloque para proveedor Agricola Teruel -->
        <div class="selection-agricola provider-agricola-block">
          <div class="row">
            <div class="col-md-3">
              <label class="form-label">Sector</label>
              <select name="reception[reception_items][][sector]" class="form-select sector-select">
                <option value="">Seleccione un sector</option>
                <% @sectors.each do |sector| %>
                  <option value="<%= sector.nombre %>" data-sector-id="<%= sector.id %>"><%= sector.nombre %></option>
                <% end %>
              </select>
            </div>
            <div class="col-md-3">
              <label class="form-label">Variedad</label>
              <select name="reception[reception_items][][variety]" class="form-select variety-select" disabled>
                <option value="">Seleccione primero un sector</option>
              </select>
            </div>
            <div class="col-md-3">
              <label class="form-label">Color</label>
              <select name="reception[reception_items][][color]" class="form-select color-select" disabled>
                <option value="">Seleccione primero una variedad</option>
              </select>
            </div>
            <div class="col-md-3">
              <label class="form-label">Firmeza</label>
              <select name="reception[reception_items][][firmeza]" class="form-select">
                <option value="">Seleccione firmeza</option>
                <% Reception::FIRMEZA_OPCIONES.each do |opcion| %>
                  <option value="<%= opcion %>"><%= opcion %></option>
                <% end %>
              </select>
            </div>
          </div>
          <div class="row mt-2">
            <div class="col-md-3">
              <label class="form-label">Calidad</label>
              <select name="reception[reception_items][][calidad]" class="form-select">
                <option value="">Seleccione calidad</option>
                <% Reception::CALIDAD_OPCIONES.each do |opcion| %>
                  <option value="<%= opcion %>"><%= opcion %></option>
                <% end %>
              </select>
            </div>
            <div class="col-md-9 text-end">
              <button type="button" class="btn btn-danger remove-item-btn">Eliminar ítem</button>
            </div>
          </div>
        </div>

        <!-- Bloque para proveedores distintos a Agricola Teruel -->
        <div class="selection-other provider-other-block" style="display: none;">
          <div class="row">
            <div class="col-md-4">
              <label class="form-label">Variedad</label>
              <select name="reception[reception_items][][variety]" class="form-select global-variety-select">
                <option value="">Seleccione una variedad</option>
                <% @all_varieties.each do |variety| %>
                  <option value="<%= variety[:nombre] %>" data-colors='<%= variety[:colors].to_json %>'>
                    <%= variety[:nombre] %>
                  </option>
                <% end %>
              </select>
            </div>
            <div class="col-md-4">
              <label class="form-label">Color</label>
              <select name="reception[reception_items][][color]" class="form-select global-color-select" disabled>
                <option value="">Seleccione una variedad primero</option>
              </select>
            </div>
            <div class="col-md-4">
              <label class="form-label">Firmeza</label>
              <select name="reception[reception_items][][firmeza]" class="form-select">
                <option value="">Seleccione firmeza</option>
                <% Reception::FIRMEZA_OPCIONES.each do |opcion| %>
                  <option value="<%= opcion %>"><%= opcion %></option>
                <% end %>
              </select>
            </div>
          </div>
          <div class="row mt-2">
            <div class="col-md-4">
              <label class="form-label">Calidad</label>
              <select name="reception[reception_items][][calidad]" class="form-select">
                <option value="">Seleccione calidad</option>
                <% Reception::CALIDAD_OPCIONES.each do |opcion| %>
                  <option value="<%= opcion %>"><%= opcion %></option>
                <% end %>
              </select>
            </div>
          </div>
        </div>

        <!-- Campos operativos, comunes a ambos modos -->
        <div class="row mt-2">
          <div class="col-md-4">
            <label class="form-label">Palets</label>
            <input type="number" name="reception[reception_items][][pallets]" class="form-control" min="0">
          </div>
          <div class="col-md-4">
            <label class="form-label">Cajas</label>
            <input type="number" name="reception[reception_items][][cajas]" class="form-control" min="0">
          </div>
          <div class="col-md-4">
            <label class="form-label">Kilos</label>
            <input type="number" step="0.01" name="reception[reception_items][][kilos]" class="form-control" min="0">
          </div>
        </div>
        <div class="row mt-3">
          <div class="col-12 text-md-end text-center">
            <button type="button" class="btn btn-outline-danger remove-item-btn">
              <i class="bi bi-trash-fill"></i> Eliminar ítem
            </button>
          </div>
        </div>
      </div>
      
    </div>

    <!-- Botón para agregar nuevos ítems -->
    <div class="d-grid gap-3 mt-4">
          <button type="button" id="add-item-btn" class="btn btn-warning shadow-sm">Agregar Ítem</button>
          <%= f.submit "Crear Recepción", class: "btn btn-lg shadow-sm text-black fw-bold", style: "background-color: #fff3cd;" %>
          <%= link_to "Volver", receptions_path, class: "btn btn-outline-warning btn-lg shadow-sm w-100", style: "border-color: #d39e00; color: #d39e00;" %>
        </div>
  <% end %>
</div>

<script>
  // Variables disponibles para los selects dependientes de la opción Agricola
  window.varietiesBySector = <%= raw @varieties_by_sector.to_json %>;

  // Actualiza el select de variedades en el bloque Agricola según el sector seleccionado
  function updateVarietySelect(sectorSelect) {
    const itemDiv = sectorSelect.closest('.reception-item');
    const varietySelect = itemDiv.querySelector('.variety-select');
    const colorSelect = itemDiv.querySelector('.color-select');
    const selectedOption = sectorSelect.options[sectorSelect.selectedIndex];
    const sectorId = selectedOption ? selectedOption.getAttribute('data-sector-id') : null;
    
    varietySelect.innerHTML = '<option value="">Seleccione una variedad</option>';
    colorSelect.innerHTML = '<option value="">Seleccione primero una variedad</option>';
    colorSelect.disabled = true;
    
    if (!sectorId) {
      varietySelect.disabled = true;
      return;
    }
    
    let varieties = window.varietiesBySector[sectorId] || [];
    varieties.forEach(function(variety) {
      let option = document.createElement('option');
      option.value = variety.nombre;  // guardamos el nombre
      option.textContent = variety.nombre;
      option.setAttribute('data-colors', JSON.stringify(variety.colors));
      varietySelect.appendChild(option);
    });
    varietySelect.disabled = false;
  }

  // Actualiza el select de colores en el bloque Agricola según la variedad seleccionada
  function updateColorSelect(varietySelect) {
    const itemDiv = varietySelect.closest('.reception-item');
    const colorSelect = itemDiv.querySelector('.color-select');
    colorSelect.innerHTML = '<option value="">Seleccione un color</option>';
    
    const selectedOption = varietySelect.options[varietySelect.selectedIndex];
    if (!selectedOption || !selectedOption.value) {
      colorSelect.disabled = true;
      return;
    }
    
    let colors = JSON.parse(selectedOption.getAttribute('data-colors') || '[]');
    colors.forEach(function(color) {
      let option = document.createElement('option');
      option.value = color;
      option.textContent = color;
      colorSelect.appendChild(option);
    });
    colorSelect.disabled = false;
  }

  // Actualiza el select de colores en el bloque para otros proveedores
  function updateGlobalColorSelect(globalVarietySelect) {
    const itemDiv = globalVarietySelect.closest('.reception-item');
    const globalColorSelect = itemDiv.querySelector('.global-color-select');
    globalColorSelect.innerHTML = '<option value="">Seleccione un color</option>';
    
    const selectedOption = globalVarietySelect.options[globalVarietySelect.selectedIndex];
    if (!selectedOption || !selectedOption.value) {
      globalColorSelect.disabled = true;
      return;
    }
    
    // Obtenemos los colores guardados en el atributo data-colors
    let colors = JSON.parse(selectedOption.getAttribute('data-colors') || '[]');
    colors.forEach(function(color) {
      let option = document.createElement('option');
      option.value = color;
      option.textContent = color;
      globalColorSelect.appendChild(option);
    });
    globalColorSelect.disabled = false;
  }

  // Manejo de eventos en los selects de sectores y variedades (modo Agricola)
  document.addEventListener('change', function(e) {
    if (e.target.matches('.sector-select')) {
      updateVarietySelect(e.target);
    }
    if (e.target.matches('.variety-select')) {
      updateColorSelect(e.target);
    }
    if (e.target.matches('.global-variety-select')) {
      updateGlobalColorSelect(e.target);
    }
  });

  // Función auxiliar para habilitar o deshabilitar todos los inputs, selects y textareas dentro de un contenedor.
  function disableInputs(container, disable) {
    container.querySelectorAll('input, select, textarea').forEach(function(input) {
      input.disabled = disable;
    });
  }

  // Función para alternar entre el bloque de Agricola Teruel y el bloque de otros proveedores.
  function toggleProviderMode() {
    const supplierSelect = document.getElementById('supplier-select');
    const selectedOption = supplierSelect.options[supplierSelect.selectedIndex];
    const supplierName = selectedOption ? selectedOption.textContent.trim() : '';
    const isAgricola = (supplierName === "Agricola Teruel");

    document.querySelectorAll('.reception-item').forEach(function(item) {
      const agricolaBlock = item.querySelector('.provider-agricola-block');
      const otherBlock = item.querySelector('.provider-other-block');
      if (isAgricola) {
        // Mostrar bloque de Agricola y habilitar sus inputs
        agricolaBlock.style.display = 'block';
        disableInputs(agricolaBlock, false);
        // Ocultar bloque "otros" y deshabilitar sus inputs
        otherBlock.style.display = 'none';
        disableInputs(otherBlock, true);
      } else {
        // Mostrar bloque para otros proveedores y habilitar sus inputs
        otherBlock.style.display = 'block';
        disableInputs(otherBlock, false);
        // Ocultar bloque de Agricola y deshabilitar sus inputs
        agricolaBlock.style.display = 'none';
        disableInputs(agricolaBlock, true);
      }
    });
  }

  // Escuchar cambios en el select de proveedor y ejecutar la función de alternar el modo
  document.getElementById('supplier-select').addEventListener('change', toggleProviderMode);
  document.addEventListener('DOMContentLoaded', toggleProviderMode);

  // Clonar un nuevo ítem manteniendo ambos bloques de selección
  document.getElementById('add-item-btn').addEventListener('click', function() {
    const container = document.getElementById('reception-items-container');
    const originalItem = document.querySelector('.reception-item');
    const newItem = originalItem.cloneNode(true);
    
    // Reiniciar todos los selects e inputs en el item clonado
    newItem.querySelectorAll('select').forEach(function(select) {
      select.selectedIndex = 0;
      if (select.classList.contains('variety-select') || select.classList.contains('color-select') || select.classList.contains('global-color-select')) {
        select.innerHTML = '<option value="">Seleccione...</option>';
        select.disabled = true;
      }
    });
    newItem.querySelectorAll('input').forEach(function(input) {
      if(input.type === "number" || input.type === "text") {
        input.value = "";
      }
    });
    container.appendChild(newItem);
    // Asegurarse de ajustar el modo en el nuevo ítem según el proveedor actual
    toggleProviderMode();
  });

  // Funcionalidad para eliminar un ítem
  document.addEventListener('click', function(e) {
    if(e.target.matches('.remove-item-btn')) {
      const itemDiv = e.target.closest('.reception-item');
      if(document.querySelectorAll('.reception-item').length > 1) {
        itemDiv.remove();
      } else {
        alert("Al menos debe existir un ítem.");
      }
    }
  });
</script>