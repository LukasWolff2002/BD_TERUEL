# app/views/receptions/informe.xlsx.axlsx

wb = xlsx_package.workbook

@receptions.each do |reception|

  wb.add_worksheet(name: "Recepci칩n #{reception.id}") do |sheet|

  # Definir estilos
  border_style = sheet.styles.add_style(
    border: { style: :thin, color: "000000" } # Borde grueso y negro
  )

  title_style = sheet.styles.add_style(b: true, sz: 14, alignment: { horizontal: :center, vertical: :center })
  text_style = sheet.styles.add_style(sz: 10, alignment: { horizontal: :center })
  bold_text_style = sheet.styles.add_style(b: true, sz: 10, alignment: { horizontal: :center })
  
  sheet.add_row [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ",]
  sheet.add_row [] # Fila 2
  sheet.add_row [] # Fila 3

  # Fila 4: Fusionamos B4:J4 y aplicamos estilo

  
  sheet.add_row [nil, "INFORME PROCESO FRUTA PACKING"], style: title_style

  
  sheet.add_row [] # Fila 5

  sheet.add_row [nil, "Productor", nil, nil, reception.supplier.present? ? reception.supplier : ""], style: [nil, bold_text_style, nil, nil, text_style]
  sheet.merge_cells("B6:D6")
  sheet.merge_cells("E6:J6")

  sheet.add_row [nil, "N칔MERO DE DOCUMENTO (Gu칤a o Factura)", nil, nil, reception.nro_guia_despacho.present? ? reception.nro_guia_despacho : ""], style: [nil, bold_text_style, nil, nil, text_style]
  sheet.merge_cells("B7:D7")
  sheet.merge_cells("E7:J7")

  sheet.add_row [nil, "Fecha de proceso", nil, reception.fecha.present? ? reception.fecha.strftime("%d/%m/%Y") : "", nil, nil, "Hora de proceso", nil, reception.hora.present? ? reception.hora.strftime("%H:%M:%S") : ""], style: [nil, bold_text_style, nil, text_style, nil, nil, bold_text_style, nil, text_style]
  sheet.merge_cells("B8:C8")
  sheet.merge_cells("D8:F8")
  sheet.merge_cells("G8:H8")
  sheet.merge_cells("I8:J8")

  sheet.add_row [] # Fila 9
  sheet.add_row [] # Fila 10

  sheet.add_row [nil, "ENCARGADO DE PACKING", nil, nil, reception.user.nombre.present? ? reception.user.nombre_completo : ""], style: [nil, bold_text_style, nil, nil, text_style]
  sheet.merge_cells("B11:D11")
  sheet.merge_cells("E11:J11")
  sheet.add_row [nil, "ENCARGADO DE INFORME", nil, nil, "DIEGO ORTIZ"], style: [nil, bold_text_style, nil, nil, text_style]
  sheet.merge_cells("B12:D12")
  sheet.merge_cells("E12:J12")

  sheet.add_row [] # Fila 13
  sheet.add_row [nil, "PALETS", nil, nil, reception.palets.present? ? reception.palets : ""], style: [nil, bold_text_style, nil, nil, text_style]
  sheet.merge_cells("B14:D14")
  sheet.merge_cells("E14:J14")

  sheet.add_row [] # Fila 15
  sheet.add_row [] # Fila 16

  sheet.add_row [nil, "DETALLE PRODUCTOS PROCESADOS", nil, nil, nil, nil, "CLIENTE", "CALIBRE", "KILOS", "CAJAS", "PORCENTAJE", nil, "PRECIO FACTURACI칍N", nil, "NETO", "IVA", "TOTAL"], style: bold_text_style
  sheet.merge_cells("B17:F17")

  neto_total = 0
  cajas_total = 0
  kilos_total = 0

  # 游댳 Agrupar items por variedad - color - calidad - firmeza
  reception.reception_items.group_by { |item| "#{item['variety']}_#{item['color']}_#{item['calidad']}_#{item['firmeza']}" }.each do |key, items|
  variety_name, color, calidad, firmeza = key.split("_")

    # 游댳 Clave correcta para buscar en @kilos_por_recepcion
    key_kilos = "#{variety_name}_#{color}_#{calidad}_#{firmeza}"
    key_cajas = "#{variety_name}_#{color}_#{calidad}_#{firmeza}"

    # 游댳 Obtener kilos totales asegurando que la clave es correcta
    kilos_totales = @kilos_por_recepcion.dig(reception.id, key_kilos) || 0.0
    cajas_totales = @cajas_por_recepcion.dig(reception.id, key_cajas) || 0.0

    cajas_total = cajas_totales + cajas_total
    kilos_total = kilos_totales + kilos_total

    # 游댳 Buscar la informaci칩n de variedad en @variedades_por_dia asegurando la clave correcta
    fecha_key = reception.fecha.strftime("%Y-%m-%d") # Formato est치ndar

    # Asegurar que la b칰squeda se haga con la clave exacta
    variedad_info = @variedades_por_dia[fecha_key]&.find { |v| v[:key] == "#{key}_#{fecha_key}" }

    
    precio_supermercado = variedad_info[:v_supermercado].to_f
    p_supermercado = variedad_info[:p_supermercado].to_f
    
    kilos_supermercado = (p_supermercado/100)*kilos_totales
    cajas_supermercado = (p_supermercado/100)*cajas_totales


    neto = precio_supermercado*kilos_supermercado
    neto_total = neto_total + neto
    iva = neto*0.19
    total = neto+iva

    #Ahora agrego los datos de SUPERMERCADO

    sheet.add_row [
      nil,
      "#{variety_name} - #{color} - #{calidad} - #{firmeza}",
      nil,
      nil,
      nil,
      nil,
      "SUPERMERCADO",
      nil,
      kilos_supermercado.round(2),
      cajas_supermercado.round(2),
      p_supermercado,
      nil,
      precio_supermercado,
      nil,
      neto.round(2),
      iva.round(2),
      total.round(2)
    ], style: text_style

    sheet.merge_cells("B#{sheet.rows.size}:F#{sheet.rows.size}")
    sheet.merge_cells("G#{sheet.rows.size}:H#{sheet.rows.size}")
    end 

  #Ahora voy con feria
  # 游댳 Agrupar items por variedad - color - calidad - firmeza
  reception.reception_items.group_by { |item| "#{item['variety']}_#{item['color']}_#{item['calidad']}_#{item['firmeza']}" }.each do |key, items|
  variety_name, color, calidad, firmeza = key.split("_")

    # 游댳 Clave correcta para buscar en @kilos_por_recepcion
    key_kilos = "#{variety_name}_#{color}_#{calidad}_#{firmeza}"
    key_cajas = "#{variety_name}_#{color}_#{calidad}_#{firmeza}"

    # 游댳 Obtener kilos totales asegurando que la clave es correcta
    kilos_totales = @kilos_por_recepcion.dig(reception.id, key_kilos) || 0.0
    cajas_totales = @cajas_por_recepcion.dig(reception.id, key_cajas) || 0.0


    # 游댳 Buscar la informaci칩n de variedad en @variedades_por_dia asegurando la clave correcta
    fecha_key = reception.fecha.strftime("%Y-%m-%d") # Formato est치ndar

    # Asegurar que la b칰squeda se haga con la clave exacta
    variedad_info = @variedades_por_dia[fecha_key]&.find { |v| v[:key] == "#{key}_#{fecha_key}" }

    
    precio_feria = variedad_info[:v_feria].to_f
    p_feria = variedad_info[:p_feria].to_f
    
    kilos_feria = (p_feria/100)*kilos_totales
    cajas_feria = (p_feria/100)*cajas_totales

    neto = precio_feria*kilos_feria
    neto_total = neto_total + neto
    iva = neto*0.19
    total = neto+iva

    #Ahora agrego los datos de SUPERMERCADO

    sheet.add_row [
      nil,
      "#{variety_name} - #{color} - #{calidad} - #{firmeza}",
      nil,
      nil,
      nil,
      nil,
      "FERIA",
      nil,
      kilos_feria.round(2),
      cajas_feria.round(2),
      p_feria,
      nil,
      precio_feria,
      nil,
      neto.round(2),
      iva.round(2),
      total.round(2)
    ], style: text_style

    sheet.merge_cells("B#{sheet.rows.size}:F#{sheet.rows.size}")
    sheet.merge_cells("G#{sheet.rows.size}:H#{sheet.rows.size}")
    end 

  #Ahora voy con descarte
  # 游댳 Agrupar items por variedad - color - calidad - firmeza
  reception.reception_items.group_by { |item| "#{item['variety']}_#{item['color']}_#{item['calidad']}_#{item['firmeza']}" }.each do |key, items|
  variety_name, color, calidad, firmeza = key.split("_")

    # 游댳 Clave correcta para buscar en @kilos_por_recepcion
    key_kilos = "#{variety_name}_#{color}_#{calidad}_#{firmeza}"
    key_cajas = "#{variety_name}_#{color}_#{calidad}_#{firmeza}"

    # 游댳 Obtener kilos totales asegurando que la clave es correcta
    kilos_totales = @kilos_por_recepcion.dig(reception.id, key_kilos) || 0.0
    cajas_totales = @cajas_por_recepcion.dig(reception.id, key_cajas) || 0.0


    # 游댳 Buscar la informaci칩n de variedad en @variedades_por_dia asegurando la clave correcta
    fecha_key = reception.fecha.strftime("%Y-%m-%d") # Formato est치ndar

    # Asegurar que la b칰squeda se haga con la clave exacta
    variedad_info = @variedades_por_dia[fecha_key]&.find { |v| v[:key] == "#{key}_#{fecha_key}" }

    
    precio_descarte = variedad_info[:v_descarte].to_f
    p_descarte = variedad_info[:p_descarte].to_f
    
    kilos_descarte = (p_descarte/100)*kilos_totales
    cajas_descarte = (p_descarte/100)*cajas_totales

    neto = precio_descarte*kilos_descarte
    neto_total = neto_total + neto
    iva = neto*0.19
    total = neto+iva

    #Ahora agrego los datos de descarte

    sheet.add_row [
      nil,
      "#{variety_name} - #{color} - #{calidad} - #{firmeza}",
      nil,
      nil,
      nil,
      nil,
      "DESCARTE",
      nil,
      kilos_descarte.round(2),
      cajas_descarte.round(2),
      p_descarte,
      nil,
      precio_descarte,
      nil,
      neto.round(2),
      iva.round(2),
      total.round(2)
    ], style: text_style

    sheet.merge_cells("B#{sheet.rows.size}:F#{sheet.rows.size}")
    sheet.merge_cells("G#{sheet.rows.size}:H#{sheet.rows.size}")
    end 

  #Ahora voy con total total
  iva_total = neto_total * 0.19
  total_total = iva_total + neto_total
  sheet.add_row [
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    nil,
    cajas_total,
    kilos_total,
    nil,
    nil,
    nil,
    nil,
    neto_total,
    iva_total,
    total_total

  ], style: bold_text_style


  end
end


# Hoja Resumen
wb.add_worksheet(name: "Resumen") do |sheet|

  # Definir estilos dentro de la hoja de resumen
  title_style = sheet.styles.add_style(b: true, sz: 14, alignment: { horizontal: :center, vertical: :center })
  text_style = sheet.styles.add_style(sz: 10, alignment: { horizontal: :center })
  bold_text_style = sheet.styles.add_style(b: true, sz: 10, alignment: { horizontal: :center })

  sheet.add_row [" "] * 20
  sheet.add_row []
  sheet.add_row []

  # T칤tulo de la hoja resumen
  sheet.add_row [nil, "RESUMEN PROCESO FRUTA PACKING"], style: title_style
  sheet.merge_cells("B4:J4")

  sheet.add_row []
  sheet.add_row [nil, "DETALLE PRODUCTOS PROCESADOS", nil, nil, nil, nil, "CLIENTE", "CALIBRE", "KILOS", "CAJAS"], style: bold_text_style
  sheet.merge_cells("B6:F6")

  # Inicializar hash para acumular kilos y cajas por variedad y color
  resumen_hash = Hash.new { |hash, key| hash[key] = { kilos: 0, cajas: 0 } }

  # Inicializar los totales generales
  kilos_totales = 0
  cajas_totales = 0

  # Recorrer todas las recepciones y acumular los valores
  @receptions.each do |reception|
    reception.reception_items.each do |item|
      # Clave 칰nica combinando variedad y color
      key = "#{item['variety']} - #{item['color']}".strip

      # Sumar kilos y cajas al hash de resumen
      resumen_hash[key][:kilos] += item["kilos"].to_f
      resumen_hash[key][:cajas] += item["cajas"].to_i

      # Sumar a los totales generales
      kilos_totales += item["kilos"].to_f
      cajas_totales += item["cajas"].to_i
    end
  end

  # Agregar los datos acumulados a la hoja resumen
  resumen_hash.each do |variety_color, valores|
    sheet.add_row [nil, variety_color, nil, nil, nil, nil, "SUPERMERCADO", nil, valores[:kilos], valores[:cajas]], style: text_style
    sheet.merge_cells("B#{sheet.rows.size}:F#{sheet.rows.size}")
    sheet.merge_cells("G#{sheet.rows.size}:H#{sheet.rows.size}")
  end

  # Agregar una fila en blanco antes del total

  # Agregar la fila con los totales generales
  sheet.add_row [nil, nil, nil, nil, nil, nil, nil, "TOTAL", kilos_totales, cajas_totales], style: bold_text_style

  sheet.add_row []
  sheet.add_row []



end