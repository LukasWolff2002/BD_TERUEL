<div class="container mt-4">
  <div class="row justify-content-center">
    <div class="col-lg-6 col-md-8 col-12">
      <div class="card border-0 shadow-sm rounded-3">
        <div class="card-header text-black text-center py-3 rounded-top bg-gradient" style="background-color: #f8d7da;">
          <h2 class="fw-bold mb-0">Editar Variedad</h2>
        </div>

        <div class="card-body p-4">
          <%= form_with(model: @variety, local: true, id: "variety-form") do |f| %>

            <% if @variety.errors.any? %>
              <div class="alert alert-danger alert-dismissible fade show d-flex align-items-center p-3" role="alert">
                <i class="bi bi-exclamation-triangle-fill me-2 fs-5"></i>
                <div>
                  <h6 class="fw-bold mb-1"><%= pluralize(@variety.errors.count, "error") %> impidieron guardar la variedad:</h6>
                  <ul class="mb-0 ps-3">
                    <% @variety.errors.full_messages.each do |message| %>
                      <li><%= message %></li>
                    <% end %>
                  </ul>
                </div>
                <button type="button" class="btn-close ms-auto" data-bs-dismiss="alert" aria-label="Close"></button>
              </div>
            <% end %>

            <!-- Campo para modificar el nombre de la variedad -->
            <div class="mb-3">
              <%= f.label :nombre, "Nombre", class: "form-label fw-bold text-danger" %>
              <%= f.text_field :nombre, class: "form-control shadow-sm border-0", placeholder: "Ingrese el nombre de la variedad" %>
            </div>

            <!-- Sección para agregar o eliminar colores asociados -->
            <div class="mb-3">
              <%= f.label :color_ids, "Colores disponibles", class: "form-label fw-bold text-danger" %>
              <div class="p-3 rounded shadow-sm" style="background-color: #f8d7da;">
                <%= f.collection_check_boxes :color_ids, Color.all.order(:nombre), :id, :nombre do |cb| %>
                  <div class="form-check">
                    <%= cb.check_box(class: "form-check-input") %>
                    <%= cb.label(class: "form-check-label") %>
                  </div>
                <% end %>
              </div>
            </div>

            <!-- Campo para porcentaje de Supermercado -->
            <div class="mb-3">
              <%= f.label :p_supermercado, "Porcentaje Supermercado (%)", class: "form-label fw-bold text-danger" %>
              <%= f.number_field :p_supermercado, step: 0.01, min: 0, max: 100, class: "form-control shadow-sm border-0 percent-input", required: true %>
            </div>

            <!-- Campo para porcentaje de Feria -->
            <div class="mb-3">
              <%= f.label :p_feria, "Porcentaje Feria (%)", class: "form-label fw-bold text-danger" %>
              <%= f.number_field :p_feria, step: 0.01, min: 0, max: 100, class: "form-control shadow-sm border-0 percent-input", required: true %>
            </div>

            <!-- Campo para porcentaje de Descarte (Calculado Automáticamente) -->
            <div class="mb-3">
              <%= f.label :p_descarte, "Porcentaje Descarte (%)", class: "form-label fw-bold text-danger" %>
              <%= f.number_field :p_descarte, step: 0.01, min: 0, max: 100, class: "form-control shadow-sm border-0 text-left", readonly: true %>
            </div>

            <div class="d-grid gap-3">
              <%= f.submit "Actualizar Variedad", class: "btn btn-lg shadow-sm w-100 text-black fw-bold", style: "background-color: #f8d7da;" %>
              <%= link_to "Cancelar", varieties_path, class: "btn btn-outline-danger btn-lg shadow-sm w-100" %>
            </div>

          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const supermarketInput = document.querySelector("[name='variety[p_supermercado]']");
    const fairInput = document.querySelector("[name='variety[p_feria]']");
    const discardInput = document.querySelector("[name='variety[p_descarte]']");

    function updateDiscardPercentage() {
      const supermarket = parseFloat(supermarketInput.value) || 0;
      const fair = parseFloat(fairInput.value) || 0;
      let discard = (100 - (supermarket + fair)).toFixed(2);
      discardInput.value = discard < 0 ? 0 : discard; // Evita valores negativos
    }

    supermarketInput.addEventListener("input", updateDiscardPercentage);
    fairInput.addEventListener("input", updateDiscardPercentage);

    // Calcular al cargar la página
    updateDiscardPercentage();
  });
</script>
